[{"C:\\konexio\\bakery\\src\\index.js":"1","C:\\konexio\\bakery\\src\\App.js":"2","C:\\konexio\\bakery\\src\\reportWebVitals.js":"3","C:\\konexio\\bakery\\src\\components\\List.jsx":"4","C:\\konexio\\bakery\\src\\components\\Add.jsx":"5","C:\\konexio\\bakery\\src\\components\\Button.jsx":"6","C:\\konexio\\bakery\\src\\components\\Pay.jsx":"7","C:\\konexio\\bakery\\src\\components\\Card.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":2354,"mtime":1612385420399,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":616,"mtime":1612384506307,"results":"13","hashOfConfig":"10"},{"size":1538,"mtime":1612390539615,"results":"14","hashOfConfig":"10"},{"size":370,"mtime":1612270141249,"results":"15","hashOfConfig":"10"},{"size":2467,"mtime":1612393826679,"results":"16","hashOfConfig":"10"},{"size":953,"mtime":1612396160317,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17owoyh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\konexio\\bakery\\src\\index.js",[],["38","39"],"C:\\konexio\\bakery\\src\\App.js",["40","41"],"import React from \"react\";\n\nimport  Button  from \"./components/Button\";\nimport  Add  from \"./components/Add\";\nimport  List from \"./components/List\";\nimport  Pay  from \"./components/Pay\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: 'add',\n      items: []\n    }\n  \n  }\n \n  selectAdd =(e)=>{\n    this.setState({activeTab:\"add\"})\n//    this.setState({classButton:\"btn btn-primary\"})\n\n   \n  }\n  selectList =(e)=>{\n    this.setState({activeTab:\"list\"})\n //   this.setState({classButtonList:\"btn btn-primary\"})\n  }\n  selectPay =(e)=>{\n    this.setState({activeTab:\"pay\"})\n  //  this.setState({classButtonPay:\"btn btn-primary\"})\n\n  }\n\n  addItem=(name, price)=> {\n    let tab = [...this.state.items];\n    tab.push({name, price});\n    this.setState({\n      items:tab\n    })\n  }\n\n\n  renderTab(){ \n    if(this.state.activeTab===\"add\")  return<Add addItem={this.addItem}></Add>   \n    if(this.state.activeTab===\"list\") return<List items={this.state.items}></List>\n    if(this.state.activeTab===\"pay\")  return<Pay items={this.state.items} ></Pay>   \n  }\n\n    \n\n  render() {\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 align-self-start\">\n      <Button  type=\"button\" isSelected={this.state.activeTab==\"add\"?\"form-control btn btn-primary\":\"form-control btn btn-light\"} \n      onClick={this.selectAdd }>\n          add\n     </Button>\n     </div>\n     <div className=\"col-md-4 align-self-start\">\n     <Button  type=\"button\"   \n     isSelected={\n                   this.state.activeTab===\"list\"\n                   ?  \"form-control btn btn-primary\"\n                   :  \"form-control btn btn-light\"\n                  } \n     onClick={this.selectList }>\n          list\n     </Button>\n     </div>\n     <div className=\"col-md-4 align-self-start\">\n     <Button  type=\"button\"  isSelected={this.state.activeTab==\"pay\"?\"form-control btn btn-primary\":\"form-control btn btn-light\"}  \n     onClick={this.selectPay } >\n          pay\n     </Button>\n      </div>\n      </div>\n      <div className=\"row\">\n     <div className=\"col-md-12\">\n              {this.renderTab()}\n          </div>\n\n        \n     \n         \n          </div>\n          </div>\n  \n     \n    )\n    }\n\n}\nexport default App;","C:\\konexio\\bakery\\src\\reportWebVitals.js",[],"C:\\konexio\\bakery\\src\\components\\List.jsx",[],"C:\\konexio\\bakery\\src\\components\\Add.jsx",["42"],"import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport class Add extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productName: \"\",\r\n      price: 1,\r\n    };\r\n    this.add = this.add.bind(this)\r\n  }\r\n  updateProductName = (e) => {\r\n    this.setState({ productName: e.target.value });\r\n  };\r\n  updatePrice = (e) => {\r\n    this.setState({ price: e.target.value });\r\n  };\r\n add(){\r\n  this.props.addItem(this.state.productName, this.state.price)\r\n }\r\n  render() {\r\n    return (\r\n      <div>\r\n        Add compponent\r\n       \r\n          <div className=\"container-fluid\">\r\n            <div className=\"row \">\r\n              <div className=\"col-12\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"\"\r\n                  value={this.state.productName}\r\n                  onChange={this.updateProductName}\r\n                />\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"range\"\r\n                  min={1}\r\n                  max={10}\r\n                  value={this.state.price}\r\n                  onChange={this.updatePrice}\r\n                />\r\n             \r\n                <button onClick={this.add} className=\"col-2 btn btn-primary\">Add</button>\r\n                  \r\n               \r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Add;\r\n","C:\\konexio\\bakery\\src\\components\\Button.jsx",[],"C:\\konexio\\bakery\\src\\components\\Pay.jsx",["43"],"import React from \"react\";\r\nimport Card from \"./Card\"\r\n\r\nexport class Pay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      basket: [],\r\n      total: 0,\r\n      totalTVA:0,\r\n      totalEcoTax:0,\r\n      totalTTC:0,\r\n      nom:[]\r\n    };\r\n\r\n  }\r\n \r\n  handleSelect =(name,price)=>{\r\n\r\n\r\n const nom=[name];\r\n    const newName=this.state.nom;\r\n    newName.push(name)\r\n    this.setState({nom:newName})\r\n    const prix =  [price]  \r\n    const newPrix = this.state.basket;\r\n     newPrix.push(prix)\r\n     this.setState({\r\n      basket: newPrix\r\n    })\r\n     \r\n    let totalEco=0\r\n    let somme=0\r\n  \r\n     for(let i=0;i<this.state.basket.length;i++)          \r\n     {\r\n        somme=somme+parseInt(this.state.basket[i])\r\n        totalEco=somme+(this.state.basket.length+1)*0.03\r\n       }      \r\n\r\n        let calculTVA=(this.state.total * 0.2).toFixed(2)\r\n        let toto=this.state.total+this.state.totalEcoTax+this.state.totalTVA\r\n        this.setState({total:somme})\r\n        this.setState({totalEcoTax:totalEco})\r\n        this.setState({totalTVA:calculTVA})\r\n        this.setState({totalTTC:toto})\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-9\">\r\n  <h1>Pay</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-8 col-sm-6\">\r\n      <ul className=\"list-group\">\r\n               {this.state.nom.length ? this.state.nom.map(el => (\r\n                    <li key={el}>\r\n                      {el} \r\n                    </li>\r\n   )): <p></p>}\r\n      </ul>\r\n      </div>\r\n      <div class=\"col-4 col-sm-6\">\r\n     <p><h5>SubTotal : {this.state.total}  €</h5></p>\r\n     <p><h5> Vat : {this.state.totalTVA} € </h5></p>\r\n     <p> <h5>Eco Tax : {this.state.totalEcoTax} €</h5></p>\r\n     <p><h5>Total : {this.state.totalTTC} €</h5> </p>\r\n    \r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n   \r\n\r\n\r\n        <ul className=\"list-group\">\r\n                {this.props.items.map(element => (\r\n                    <li className=\"list-group-item\" key={element}>\r\n                       <Card  onClick={this.handleSelect } \r\n                            itemName={element.name} price={element.price} quantity={element}\r\n                    \r\n                        />  \r\n                        <span className=\"badge badge-primary badge-pill\">{element.price}€</span>\r\n                    </li>\r\n                ))}\r\n                </ul>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n  export default Pay;","C:\\konexio\\bakery\\src\\components\\Card.jsx",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":61,"column":62,"nodeType":"51","messageId":"52","endLine":61,"endColumn":64},{"ruleId":"49","severity":1,"message":"50","line":78,"column":62,"nodeType":"51","messageId":"52","endLine":78,"endColumn":64},{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"57","line":21,"column":8,"nodeType":"55","messageId":"56","endLine":21,"endColumn":11},{"ruleId":"58","severity":1,"message":"59","line":34,"column":15,"nodeType":"60","endLine":34,"endColumn":71},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'nom' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]